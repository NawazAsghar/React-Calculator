{"version":3,"sources":["App.js","index.js"],"names":["App","useState","value","setValue","result","setResult","changeValue","v","ops","includes","slice","showResult","eval","digest","digestsAry","i","push","onClick","toString","className","del","newValue","clrAll","operaterBtns","operaters","forEach","op","ReactDOM","render","document","getElementById"],"mappings":"m2BAIA,SAASA,MACP,cAA0BC,oDAAS,IAAnC,2MAAOC,MAAP,cAAcC,SAAd,cACA,WAA4BF,oDAAS,IAArC,4MAAOG,OAAP,cAAeC,UAAf,cAGMC,YAAc,SAAAC,GAClB,IAAMC,EAAM,CAAC,IAAI,IAAK,IAAK,IAAK,IAAI,IAAI,MAAO,OAE5CA,EAAIC,SAASF,IAAgB,KAAVL,OACnBM,EAAIC,SAASF,IAAMC,EAAIC,SAASP,MAAMQ,OAAO,KAK9CP,SAASD,MAAQK,GAHjBF,UAAU,KASRM,WAAa,SAAbA,aACJN,UAAUO,KAAKV,QACfC,SAAS,KAILU,OAAS,WAEb,IADA,IAAMC,EAAa,GADD,WAETC,GACPD,EAAWE,KACX,qEAAQC,QAAS,kBAAKX,YAAYS,EAAEG,aAAaC,UAAU,aAA3D,SAAiFJ,GAAJA,KAFtEA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAKT,OAAOD,GAIHM,IAAM,WACV,GAAc,KAAVlB,WAEC,CACH,IAAMmB,EAAWnB,MAAMQ,MAAM,GAAI,GACjCP,SAASkB,KAGPC,OAAS,WACbnB,SAAS,IACTE,UAAU,KAGNkB,aAAe,WACnB,IACMC,EAAY,GAUlB,MAXqB,CAAC,IAAI,IAAK,IAAK,IAAK,IAAI,IAAI,MAAO,OAE3CC,SAAQ,SAAAC,GACR,QAAPA,EACFF,EAAUR,KAAK,qEAAQG,UAAU,gBAAgBF,QAASG,IAA3C,SAA0DM,GAALA,IACrD,QAAPA,EACRF,EAAUR,KAAK,qEAAQG,UAAU,gBAAgBF,QAASK,OAA3C,SAA6DI,GAALA,IAEvEF,EAAUR,KAAM,qEAAQG,UAAU,SAASF,QAAS,kBAAKX,YAAYoB,EAAGR,aAAxD,SAA+EQ,GAALA,OAGvFF,GAGT,OACE,mEAAKL,UAAU,MAAf,UACE,mEAAKA,UAAU,SAAf,cAAyB,8EAAOjB,MAAP,KAAgBE,UAAzC,OADF,KAEE,mEAAKe,UAAU,YAAf,cAA6BI,eAA7B,IAA6C,qEAAQJ,UAAU,SAASF,QAASN,WAApC,eAA7C,OAFF,IAGE,mEAAKQ,UAAU,SAAf,cAA0BN,SAA1B,OAHF,OAOWb,2B,6BC7Ef,sDAKA2B,IAASC,OAAO,cAAC,IAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.490230ca.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n/* eslint no-eval: 0 */\n\nfunction App() {\n  const [value, setValue] = useState('')\n  const [result, setResult] = useState('')\n\n  // When we click on any button showing it's value in span or showing the rusult.\n  const changeValue = v => {\n    const ops = ['/','-', '*', '+', '%','.','Del', 'Clr'];\n    if (\n      (ops.includes(v) && value === '') ||\n      (ops.includes(v) && ops.includes(value.slice(-1)))\n    ){\n      setResult('')\n      return;\n    }else{\n      setValue(value + v)\n      setResult('')\n    }\n  }\n\n  // For showing Result after cliking on '=' button.\n  const showResult = () => {\n    setResult(eval(value))\n    setValue('')\n  }\n\n  // For Genareting operaters (0 to 9).\n  const digest = () =>{\n    const digestsAry = [];\n    for (let i = 0; i < 10; i ++){\n      digestsAry.push(\n      <button onClick={()=> changeValue(i.toString())} className='digetsbtns' key={i}>{i}</button>\n      )\n    }\n    return digestsAry;\n  }\n\n  // Back btn or Delete btn\n  const del = () => {\n    if (value === ''){\n\n    }else{\n      const newValue = value.slice(0, -1);\n      setValue(newValue)\n    }\n  }\n  const clrAll = () => {\n    setValue('')\n    setResult('')\n  }\n  // For Genareting operaters (-,+,/,%,*).\n  const operaterBtns = () => {\n    const operatersAry = ['/','-', '*', '+', '%','.','Del', 'Clr'];\n    const operaters = [];\n    operatersAry.forEach(op => {\n      if (op === 'Del'){\n        operaters.push(<button className='delBtn opbtns' onClick={del} key={op}>{op}</button>)\n      }else if (op === 'Clr'){\n        operaters.push(<button className='clrAll opbtns' onClick={clrAll} key={op}>{op}</button>)\n      } else {\n        operaters.push( <button className='opbtns' onClick={()=> changeValue(op.toString())} key={op}>{op}</button> )\n      }\n    });\n    return operaters;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='result'> <span>{value}  {result}</span> </div>  {/* For the result and input area */}\n      <div className='operaters'> {operaterBtns()} <button className='opbtns' onClick={showResult} >=</button> </div> {/* Operaters buttons (-,+, etc) */}\n      <div className='digets'> {digest()} </div> {/* For number 0 to 9 (genarated) */}\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n"],"sourceRoot":""}